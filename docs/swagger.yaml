definitions:
  dto.Event:
    properties:
      date:
        type: string
      description:
        minLength: 10
        type: string
      id:
        type: integer
      location:
        type: string
      name:
        type: string
      owner_id:
        description: 'todo: Should be foreign relation'
        type: integer
    required:
    - date
    - description
    - location
    - name
    type: object
  gin.H:
    additionalProperties: {}
    type: object
info:
  contact: {}
  description: This is a Go REST API server for an events app.
  title: Go Events API server
  version: "1.0"
paths:
  /api/v1/events:
    get:
      consumes:
      - application/json
      description: Returns all events
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/dto.Event'
            type: array
      security:
      - BearerAuth: []
      summary: Returns all events
      tags:
      - Events
    post:
      consumes:
      - application/json
      description: Creates a new event
      parameters:
      - description: Event details
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/dto.Event'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/dto.Event'
      security:
      - BearerAuth: []
      summary: Creates a new event
      tags:
      - Events
  /api/v1/events/{id}:
    delete:
      consumes:
      - application/json
      description: Deletes a single event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/gin.H'
      security:
      - BearerAuth: []
      summary: Deletes a single event by ID
      tags:
      - Events
    get:
      consumes:
      - application/json
      description: Returns a single event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Event'
      security:
      - BearerAuth: []
      summary: Returns a single event by ID
      tags:
      - Events
    put:
      consumes:
      - application/json
      description: Updates a single event by ID
      parameters:
      - description: Event ID
        in: path
        name: id
        required: true
        type: integer
      - description: Event details
        in: body
        name: event
        required: true
        schema:
          $ref: '#/definitions/dto.Event'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/dto.Event'
      security:
      - BearerAuth: []
      summary: Updates a single event by ID
      tags:
      - Events
securityDefinitions:
  BearerAuth:
    description: Enter your JWT token in the format Bearer **&lt;token&gt;**
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
